package br.ucs.classleague.presentation.views;

import br.ucs.classleague.domain.Coach;
import br.ucs.classleague.domain.MatchState;
import br.ucs.classleague.domain.MatchTimer;
import br.ucs.classleague.domain.Team;
import br.ucs.classleague.presentation.controllers.ControllerUtilities;
import br.ucs.classleague.presentation.controllers.MatchController;
import br.ucs.classleague.presentation.controllers.MatchPointsController;
import br.ucs.classleague.presentation.controllers.RegisterController;
import br.ucs.classleague.presentation.controllers.TournamentController;
import br.ucs.classleague.presentation.controllers.TournamentDataController;
import br.ucs.classleague.presentation.controllers.visualizationDataController;
import br.ucs.classleague.presentation.model.MatchModel;
import br.ucs.classleague.presentation.model.TournamentModel;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.UIManager;
import javax.swing.event.HyperlinkEvent;
import javax.swing.table.DefaultTableCellRenderer;

public class GUI extends javax.swing.JFrame {
    
    public int prevClassNumber = -1;
    public Color defaultColor = UIManager.getColor("timerCurrentTimeLabel.background"); 
    
    private RegisterController registerController;
    private visualizationDataController visualizationDataController;
    private TournamentController tournamentController;
    private MatchController matchController;
    private MatchPointsController matchPointsController;
    private TournamentDataController tournamentDataController;
    
    private MatchModel matchModel;
    private TournamentModel tournamentModel;
    
    private CardLayout cl = new CardLayout();
    private String tournamentDialogActiveLayout = "card1";

    public GUI() {
        initModels();
        initControllers();
        initComponents();
    }
    
    private void initModels() {
        tournamentModel = new TournamentModel();
        matchModel = new MatchModel();
    }
    
    private void initControllers() {
        this.registerController = new RegisterController(this);
        this.visualizationDataController = new visualizationDataController(this);
        this.tournamentController = new TournamentController(this, tournamentModel, matchModel);
        this.matchController = new MatchController(this, matchModel, tournamentModel);
        this.matchPointsController = new MatchPointsController(this, matchModel);
        this.tournamentDataController = new TournamentDataController(this, tournamentModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tournamentDialog = new javax.swing.JDialog();
        tournamentDialogMainPanel = new javax.swing.JPanel();
        tournamentMainPanel = new javax.swing.JPanel();
        tournamentDialogNameData = new javax.swing.JLabel();
        tournamentInfoPanel = new javax.swing.JPanel();
        tournamentDialogInfoTitleLabel = new javax.swing.JLabel();
        tournamentDialogSportTypeLabel = new javax.swing.JLabel();
        tournamentDialogPhaseLabel = new javax.swing.JLabel();
        tournamentDialogEndDateField = new javax.swing.JLabel();
        tournamentDialogStartDateField = new javax.swing.JLabel();
        tournamentDialogInfoIcon = new javax.swing.JLabel();
        tournamentDialogSportTypeInfoData = new javax.swing.JLabel();
        tournamentDialogPhaseInfoData = new javax.swing.JLabel();
        tournamentDialogStartDateInfoData = new javax.swing.JLabel();
        tournamentDialogEndInfoData = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tournamentMatchPanel = new javax.swing.JPanel();
        tournamentNextMatchesTable = new javax.swing.JLabel();
        tournamentMatchesTableScrollPane = new javax.swing.JScrollPane();
        tournamentMatchesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tournamentPreviousMatchesTable = new javax.swing.JTable();
        tournamentHistoryComboBox = new javax.swing.JComboBox<>();
        tournamentSidePanel = new javax.swing.JPanel();
        viewTeamsButton = new javax.swing.JButton();
        startNewMatchButton = new javax.swing.JButton();
        startNewPhaseButton = new javax.swing.JButton();
        tournamentRankingButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        tournamentStatusLabel = new javax.swing.JLabel();
        matchMainPanel = new javax.swing.JPanel();
        matchTitle = new javax.swing.JLabel();
        matchInfoPanel = new javax.swing.JPanel();
        matchInfoTitle = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        matchPhaseDataLabel = new javax.swing.JLabel();
        matchStartDateDataLabel = new javax.swing.JLabel();
        matchStartTimeDataLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        matchStatusInfoPanel = new javax.swing.JPanel();
        firstTeamNameLabel = new javax.swing.JLabel();
        secondTeamNameLabel = new javax.swing.JLabel();
        firstTeamScoreLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        secondTeamScoreLabel = new javax.swing.JLabel();
        matchControlPanel = new javax.swing.JPanel();
        matchControlTitle = new javax.swing.JLabel();
        matchControlTimerPanel = new javax.swing.JPanel();
        timerPlayButton = new javax.swing.JToggleButton();
        timerNextPeriodButton = new javax.swing.JButton();
        timerResetTimerButton = new javax.swing.JButton();
        timerProgressBar = new javax.swing.JProgressBar();
        timerCurrentTimeLabel = new javax.swing.JLabel();
        timerEndTimeLabel = new javax.swing.JLabel();
        timerPeriodLabel = new javax.swing.JLabel();
        timerPeriodNumberLabel = new javax.swing.JLabel();
        matchControlPointsPanel = new javax.swing.JPanel();
        addPointsComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        pointsScoredTable = new javax.swing.JTable();
        addPointButton = new javax.swing.JButton();
        removePointButton = new javax.swing.JButton();
        endMatchButton = new javax.swing.JButton();
        participantTeamsMainPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tournamentParticipantsTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        rankingMainPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        rankingTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        tournamentRankingTeamsComboBox = new javax.swing.JComboBox<>();
        classesDialog = new javax.swing.JDialog();
        classesTablePanel = new javax.swing.JPanel();
        classesTableScrollPane = new javax.swing.JScrollPane();
        jClassesTable = new javax.swing.JTable(visualizationDataController.getClassesTableModel(0));
        classVisualizationLabel = new javax.swing.JLabel();
        exportClassesToCSVButton = new javax.swing.JButton();
        studentsDialog = new javax.swing.JDialog();
        studentsTablePanel = new javax.swing.JPanel();
        studentsTableScrollPane1 = new javax.swing.JScrollPane();
        jStudentsTable = new javax.swing.JTable(visualizationDataController.getStudentsTableModel(0));
        studentsVisualizationLabel = new javax.swing.JLabel();
        exportStudentsToCSVButton = new javax.swing.JButton();
        teamsDialog = new javax.swing.JDialog();
        teamsTablePanel = new javax.swing.JPanel();
        teamsTableScrollPane = new javax.swing.JScrollPane();
        jTeamsTable = new javax.swing.JTable(visualizationDataController.getTeamsTableModel(0));
        teamsVisualizationLabel = new javax.swing.JLabel();
        exportTeamsToSCVButton = new javax.swing.JButton();
        coachDialog = new javax.swing.JDialog();
        coachTablePanel = new javax.swing.JPanel();
        coachTableScrollPane = new javax.swing.JScrollPane();
        jCoachTable = new javax.swing.JTable(visualizationDataController.getCoachTableModel(0));
        coachVisualizationLabel = new javax.swing.JLabel();
        exportCoachToCSVButton = new javax.swing.JButton();
        aboutDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        mainTabbedPane = new javax.swing.JTabbedPane();
        mainPanel = new javax.swing.JPanel();
        mainTopPanel = new javax.swing.JPanel();
        mainInnerTopPanel = new javax.swing.JPanel();
        jTournamentLabel = new javax.swing.JLabel();
        searchTournamentField = new javax.swing.JTextField();
        searchTournamentBtn = new javax.swing.JButton();
        addTournamentBtn = new javax.swing.JButton();
        jTournamentSelectScrollPane = new javax.swing.JScrollPane();
        jTournamentSelectTable = new javax.swing.JTable();
        mainBottomPanel = new javax.swing.JPanel();
        tournamentRegister = new javax.swing.JPanel();
        tournamentLabel = new javax.swing.JLabel();
        tournamentRegisterPanel = new javax.swing.JPanel();
        tournamentNameLabel = new javax.swing.JLabel();
        tournamentNameField = new javax.swing.JTextField();
        tournamentStartDateLabel = new javax.swing.JLabel();
        tournamentEndDateLabel = new javax.swing.JLabel();
        tournamentStartDateField = new javax.swing.JFormattedTextField();
        tournamentEndDateField = new javax.swing.JFormattedTextField();
        tournamentSportLabel = new javax.swing.JLabel();
        tournamentSportComboBox = new javax.swing.JComboBox<>(registerController.showSportsNames());
        tournamentRegisterButton = new javax.swing.JButton();
        tournamentTeamsLabel = new javax.swing.JLabel();
        jTournamentRegisterTeamScrollPane = new javax.swing.JScrollPane();
        tournamentRegisterTeamsTable =  new javax.swing.JTable(registerController.getTableModel(0));
        classRegister = new javax.swing.JPanel();
        title4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jClassNameField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jClassNumber = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jClassShift = new javax.swing.JComboBox<>(registerController.showClassShiftNames());
        jLabel17 = new javax.swing.JLabel();
        jClassCycle = new javax.swing.JComboBox<>(registerController.showEducationalCycleNames());
        jButton8 = new javax.swing.JButton();
        studentRegister2 = new javax.swing.JPanel();
        jStudentRegisterTitle = new javax.swing.JLabel();
        jStudentRegisterPanel = new javax.swing.JPanel();
        jRegisterStudentNameLabel = new javax.swing.JLabel();
        jRegisterStudentNameField = new javax.swing.JTextField();
        jRegisterStudentGenderLabel = new javax.swing.JLabel();
        JRegisterStudentClassLabel = new javax.swing.JLabel();
        jRegisterStudentClassComboBox = new javax.swing.JComboBox<>();
        JRegisterStudentFatherNameLabel = new javax.swing.JLabel();
        jRegisterStudentFatherNameField = new javax.swing.JTextField();
        jRegisterStudentMotherNameLabel = new javax.swing.JLabel();
        jRegisterStudentMotherNameField = new javax.swing.JTextField();
        JStudentRegisterButton = new javax.swing.JButton();
        jRegisterStudentBirthdateLabel = new javax.swing.JLabel();
        jRegisterStudentSurnameLabel = new javax.swing.JLabel();
        jRegisterStudentSurnameField = new javax.swing.JTextField();
        jRegisterStudentCPFLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jRegisterStudentTelephoneField = new javax.swing.JFormattedTextField();
        jRegisterStudentBirthdateField = new javax.swing.JFormattedTextField();
        jRegisterStudentCPFField = new javax.swing.JFormattedTextField();
        studentGenderComboBox = new javax.swing.JComboBox<>(registerController.showGender());
        teamRegisterPanel = new javax.swing.JPanel();
        jTeamRegisterTitle = new javax.swing.JLabel();
        jInnerTeamRegisterPanel = new javax.swing.JPanel();
        jTeamRegisterNameLabel = new javax.swing.JLabel();
        jTeamRegisterNameField = new javax.swing.JTextField();
        jTeamRegisterAcronymLabel = new javax.swing.JLabel();
        jTeamRegisterAcronymField = new javax.swing.JTextField();
        jTeamRegisterSportLabel = new javax.swing.JLabel();
        jTeamRegisterSportComboBox = new javax.swing.JComboBox<>(registerController.showSportsNames());
        jTeamRegisterClassPickerLabel = new javax.swing.JLabel();
        jTeamRegisterClassPickerComboBox = new javax.swing.JComboBox<>();
        jTeamRegisterButton = new javax.swing.JButton();
        jTeamRegisterStudentsScrollPane = new javax.swing.JScrollPane();
        jTeamRegisterStudentsTable =  new javax.swing.JTable(registerController.getTeamRegisterTableModel(0));
        jTeamRegisterCoachPickerLabel = new javax.swing.JLabel();
        jTeamRegisterCoachPickerComboBox = new javax.swing.JComboBox<>();
        coachRegister = new javax.swing.JPanel();
        jCoachRegisterTitle1 = new javax.swing.JLabel();
        coachRegisterPanel = new javax.swing.JPanel();
        coachSurnameLabel = new javax.swing.JLabel();
        coachNameField = new javax.swing.JTextField();
        coachGenderLabel = new javax.swing.JLabel();
        coachNameLabel1 = new javax.swing.JLabel();
        coachSurnameField1 = new javax.swing.JTextField();
        coachPhoneLabel = new javax.swing.JLabel();
        coachCPFLabel = new javax.swing.JLabel();
        coachBirthDateLabel = new javax.swing.JLabel();
        coachSportLabel = new javax.swing.JLabel();
        JCoachRegisterButton1 = new javax.swing.JButton();
        coachBirthDateField = new javax.swing.JFormattedTextField();
        coachCPFField = new javax.swing.JFormattedTextField();
        coachPhoneField = new javax.swing.JFormattedTextField();
        coachSportComboBox = new javax.swing.JComboBox<>(registerController.showSportsNames());
        coachGenderComboBox = new javax.swing.JComboBox<>(registerController.showGender());
        viewListsRegister = new javax.swing.JPanel();
        jViewRegisterTitle = new javax.swing.JLabel();
        ViewListsRegisterPanel = new javax.swing.JPanel();
        viewClassesButton = new javax.swing.JButton();
        viewStudentsButton1 = new javax.swing.JButton();
        viewTeamsButton2 = new javax.swing.JButton();
        viewCoachButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        tournamentDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        tournamentDialog.setTitle("Torneio");
        tournamentDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tournamentDialog.setMinimumSize(null);
        tournamentDialog.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        tournamentDialog.setResizable(false);
        tournamentDialog.setSize(new java.awt.Dimension(1024, 768));
        Dimension window = tournamentDialog.getSize();
        Insets decoration = tournamentDialog.getInsets();
        tournamentDialog.setSize( window.width - decoration.left - decoration.right, window.height - decoration.top - decoration.bottom);

        tournamentDialog.setLocationRelativeTo(null);
        tournamentDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tournamentDialogComponentShown(evt);
            }
        });
        tournamentDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                tournamentDialogWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                tournamentDialogWindowClosing(evt);
            }
        });

        tournamentDialogMainPanel.setPreferredSize(new java.awt.Dimension(1024, 768));
        tournamentDialogMainPanel.setLayout(new java.awt.CardLayout());
        tournamentDialogMainPanel.setLayout(cl);

        tournamentMainPanel.setPreferredSize(new java.awt.Dimension(1024, 768));

        tournamentDialogNameData.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        tournamentDialogNameData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tournamentDialogNameData.setText("Nome do Torneio");
        tournamentDialogNameData.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tournamentInfoPanel.setBackground(new java.awt.Color(50, 50, 50));
        tournamentInfoPanel.setPreferredSize(new java.awt.Dimension(693, 212));

        tournamentDialogInfoTitleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        tournamentDialogInfoTitleLabel.setText("Informações");

        tournamentDialogSportTypeLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        tournamentDialogSportTypeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/desporto-24.png"))); // NOI18N
        tournamentDialogSportTypeLabel.setText("Tipo do esporte:");

        tournamentDialogPhaseLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        tournamentDialogPhaseLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/modo-de-torneio-24.png"))); // NOI18N
        tournamentDialogPhaseLabel.setText("Fase eliminatória:");

        tournamentDialogEndDateField.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        tournamentDialogEndDateField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendario-24.png"))); // NOI18N
        tournamentDialogEndDateField.setText("Data de término: ");

        tournamentDialogStartDateField.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        tournamentDialogStartDateField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendario-24.png"))); // NOI18N
        tournamentDialogStartDateField.setText("Data de início: ");

        tournamentDialogInfoIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tournamentDialogInfoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/info-24.png"))); // NOI18N

        jSeparator1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout tournamentInfoPanelLayout = new javax.swing.GroupLayout(tournamentInfoPanel);
        tournamentInfoPanel.setLayout(tournamentInfoPanelLayout);
        tournamentInfoPanelLayout.setHorizontalGroup(
            tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tournamentInfoPanelLayout.createSequentialGroup()
                        .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tournamentInfoPanelLayout.createSequentialGroup()
                                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tournamentDialogSportTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tournamentDialogPhaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tournamentDialogPhaseInfoData, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tournamentDialogSportTypeInfoData, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tournamentDialogStartDateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tournamentDialogEndDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tournamentDialogStartDateInfoData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tournamentDialogEndInfoData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                                .addComponent(tournamentDialogInfoTitleLabel)
                                .addGap(0, 491, Short.MAX_VALUE)
                                .addComponent(tournamentDialogInfoIcon)))
                        .addGap(31, 31, 31))))
        );
        tournamentInfoPanelLayout.setVerticalGroup(
            tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(tournamentDialogInfoTitleLabel))
                    .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tournamentDialogInfoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tournamentDialogStartDateInfoData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tournamentDialogStartDateField)
                                .addComponent(tournamentDialogSportTypeInfoData, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tournamentInfoPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tournamentDialogSportTypeLabel)
                        .addGap(18, 18, 18)))
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tournamentDialogEndInfoData, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentDialogEndDateField)
                    .addComponent(tournamentDialogPhaseLabel)
                    .addComponent(tournamentDialogPhaseInfoData, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        tournamentMatchPanel.setBackground(new java.awt.Color(50, 50, 50));
        tournamentMatchPanel.setPreferredSize(new java.awt.Dimension(693, 417));

        tournamentNextMatchesTable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        tournamentNextMatchesTable.setText("Confrontos da Fase");

        tournamentMatchesTable.setBackground(new java.awt.Color(30, 30, 30));
        tournamentMatchesTable.setModel(tournamentController.getTournamentMatchTableModel(0));
        tournamentMatchesTable.getTableHeader().setReorderingAllowed(false);
        tournamentMatchesTableScrollPane.setViewportView(tournamentMatchesTable);
        tournamentMatchesTable.getColumnModel().getColumn(0).setMinWidth(0);
        tournamentMatchesTable.getColumnModel().getColumn(0).setMaxWidth(0);
        tournamentMatchesTable.getSelectionModel().addListSelectionListener((evt) -> {
            int row = tournamentMatchesTable.getSelectedRow();

            if (!evt.getValueIsAdjusting() && row != -1) {
                String matchId = tournamentMatchesTable.getValueAt(row, 0).toString();
                tournamentController.checkEnableMatch(matchId);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setText("Histórico");

        tournamentPreviousMatchesTable.setBackground(new java.awt.Color(30, 30, 30));
        tournamentPreviousMatchesTable.setModel(tournamentController.getPreviousMatchesTableModel(0));
        tournamentPreviousMatchesTable.setFocusable(false);
        tournamentPreviousMatchesTable.setRequestFocusEnabled(false);
        tournamentPreviousMatchesTable.setRowSelectionAllowed(false);
        tournamentPreviousMatchesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tournamentPreviousMatchesTable);

        tournamentHistoryComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tournamentHistoryComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout tournamentMatchPanelLayout = new javax.swing.GroupLayout(tournamentMatchPanel);
        tournamentMatchPanel.setLayout(tournamentMatchPanelLayout);
        tournamentMatchPanelLayout.setHorizontalGroup(
            tournamentMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMatchPanelLayout.createSequentialGroup()
                .addGroup(tournamentMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tournamentMatchPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(tournamentMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tournamentNextMatchesTable, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tournamentMatchesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tournamentMatchPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tournamentMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tournamentMatchPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tournamentHistoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
        );
        tournamentMatchPanelLayout.setVerticalGroup(
            tournamentMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMatchPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(tournamentNextMatchesTable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentMatchesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(tournamentMatchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentHistoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tournamentSidePanel.setBackground(new java.awt.Color(50, 50, 50));

        viewTeamsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/time-de-futebol-48.png"))); // NOI18N
        viewTeamsButton.setText("Visualizar Times");
        viewTeamsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        viewTeamsButton.setIconTextGap(0);
        viewTeamsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        viewTeamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTeamsButtonActionPerformed(evt);
            }
        });

        startNewMatchButton.setText("Ir para partida");
        startNewMatchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        startNewMatchButton.setEnabled(false);
        startNewMatchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        startNewMatchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewMatchButtonActionPerformed(evt);
            }
        });

        startNewPhaseButton.setText("Próxima fase");
        startNewPhaseButton.setEnabled(false);
        startNewPhaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewPhaseButtonActionPerformed(evt);
            }
        });

        tournamentRankingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ranking-50.png"))); // NOI18N
        tournamentRankingButton.setText("Ranking");
        tournamentRankingButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tournamentRankingButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tournamentRankingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tournamentRankingButtonActionPerformed(evt);
            }
        });

        jSeparator2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jSeparator4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout tournamentSidePanelLayout = new javax.swing.GroupLayout(tournamentSidePanel);
        tournamentSidePanel.setLayout(tournamentSidePanelLayout);
        tournamentSidePanelLayout.setHorizontalGroup(
            tournamentSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tournamentSidePanelLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(tournamentSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewTeamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startNewPhaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startNewMatchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(tournamentRankingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49))
            .addComponent(jSeparator2)
            .addComponent(jSeparator4)
        );

        tournamentSidePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {startNewMatchButton, startNewPhaseButton});

        tournamentSidePanelLayout.setVerticalGroup(
            tournamentSidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tournamentSidePanelLayout.createSequentialGroup()
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startNewMatchButton)
                .addGap(26, 26, 26)
                .addComponent(startNewPhaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addComponent(tournamentRankingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(viewTeamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        tournamentSidePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {startNewMatchButton, startNewPhaseButton});

        jPanel2.setBackground(new java.awt.Color(50, 50, 50));

        tournamentStatusLabel.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        tournamentStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        System.out.println(getClass().getResource("/icons/estado-torneio.gif"));
        tournamentStatusLabel.setText("STATUS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tournamentStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tournamentStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout tournamentMainPanelLayout = new javax.swing.GroupLayout(tournamentMainPanel);
        tournamentMainPanel.setLayout(tournamentMainPanelLayout);
        tournamentMainPanelLayout.setHorizontalGroup(
            tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tournamentMatchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                        .addComponent(tournamentInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tournamentDialogNameData, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tournamentSidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        tournamentMainPanelLayout.setVerticalGroup(
            tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                        .addComponent(tournamentDialogNameData, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)))
                .addGroup(tournamentMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                        .addComponent(tournamentInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(tournamentMatchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tournamentSidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        tournamentSidePanel.getAccessibleContext().setAccessibleName("");

        tournamentDialogMainPanel.add(tournamentMainPanel, "card1");
        tournamentModel.addPropertyChangeListener((evt) -> {
            if (evt.getPropertyName().equals(TournamentModel.MATCH_STATE)){
                startNewMatchButton.setEnabled(tournamentModel.getCanStartMatch());
            }
        });

        matchMainPanel.setPreferredSize(new java.awt.Dimension(1024, 768));

        matchTitle.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        matchTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        matchTitle.setText("Partida");
        matchTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        matchTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        matchInfoPanel.setBackground(new java.awt.Color(50, 50, 50));

        matchInfoTitle.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        matchInfoTitle.setText("Informações");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/clock-24.png"))); // NOI18N
        jLabel6.setText("Hora:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendario-24.png"))); // NOI18N
        jLabel7.setText("Data:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/modo-de-torneio-24.png"))); // NOI18N
        jLabel8.setText("Etapa:");

        matchPhaseDataLabel.setText("...");

        matchStartDateDataLabel.setText("...");

        matchStartTimeDataLabel.setText("...");

        javax.swing.GroupLayout matchInfoPanelLayout = new javax.swing.GroupLayout(matchInfoPanel);
        matchInfoPanel.setLayout(matchInfoPanelLayout);
        matchInfoPanelLayout.setHorizontalGroup(
            matchInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchInfoPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(matchInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(matchInfoTitle)
                    .addGroup(matchInfoPanelLayout.createSequentialGroup()
                        .addGroup(matchInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(matchInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(matchPhaseDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(matchInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(matchStartDateDataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(matchStartTimeDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3))
                .addGap(20, 20, 20))
        );
        matchInfoPanelLayout.setVerticalGroup(
            matchInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchInfoPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(matchInfoTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matchInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(matchPhaseDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(matchInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(matchStartTimeDataLabel)
                    .addComponent(jLabel7)
                    .addComponent(matchStartDateDataLabel))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        matchStatusInfoPanel.setBackground(new java.awt.Color(50, 50, 50));

        firstTeamNameLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        firstTeamNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstTeamNameLabel.setText("TIME 1");

        secondTeamNameLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        secondTeamNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondTeamNameLabel.setText("TIME 2");

        firstTeamScoreLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        firstTeamScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstTeamScoreLabel.setText("0");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("X");

        secondTeamScoreLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        secondTeamScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondTeamScoreLabel.setText("0");

        javax.swing.GroupLayout matchStatusInfoPanelLayout = new javax.swing.GroupLayout(matchStatusInfoPanel);
        matchStatusInfoPanel.setLayout(matchStatusInfoPanelLayout);
        matchStatusInfoPanelLayout.setHorizontalGroup(
            matchStatusInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchStatusInfoPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(firstTeamScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(secondTeamScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
            .addGroup(matchStatusInfoPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(firstTeamNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(secondTeamNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        matchStatusInfoPanelLayout.setVerticalGroup(
            matchStatusInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchStatusInfoPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(matchStatusInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondTeamNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstTeamNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(matchStatusInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(firstTeamScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondTeamScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        matchControlPanel.setBackground(new java.awt.Color(50, 50, 50));

        matchControlTitle.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        matchControlTitle.setText("Controle");

        timerPlayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/play-48.png"))); // NOI18N
        timerPlayButton.setPreferredSize(new java.awt.Dimension(34, 35));
        timerPlayButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pause-48.png"))); // NOI18N
        timerPlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerPlayButtonActionPerformed(evt);
            }
        });

        timerNextPeriodButton.setBackground(new java.awt.Color(102, 102, 255));
        timerNextPeriodButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tempo-24.png"))); // NOI18N
        timerNextPeriodButton.setToolTipText("Avançar tempo/set/quadro");
        timerNextPeriodButton.setEnabled(false);
        timerNextPeriodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerNextPeriodButtonActionPerformed(evt);
            }
        });

        timerResetTimerButton.setBackground(new java.awt.Color(255, 102, 102));
        timerResetTimerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/restart-24.png"))); // NOI18N
        timerResetTimerButton.setToolTipText("Resetar cronômetro");
        timerResetTimerButton.setEnabled(false);
        timerResetTimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerResetTimerButtonActionPerformed(evt);
            }
        });

        timerProgressBar.setMaximum(0);

        timerCurrentTimeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        timerCurrentTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timerCurrentTimeLabel.setText("00:00");

        timerEndTimeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        timerEndTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timerEndTimeLabel.setText("00:00");

        timerPeriodLabel.setText("º Tempo");

        timerPeriodNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        timerPeriodNumberLabel.setText("1");

        javax.swing.GroupLayout matchControlTimerPanelLayout = new javax.swing.GroupLayout(matchControlTimerPanel);
        matchControlTimerPanel.setLayout(matchControlTimerPanelLayout);
        matchControlTimerPanelLayout.setHorizontalGroup(
            matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matchControlTimerPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(timerNextPeriodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(timerPlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(timerResetTimerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                .addGroup(matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(timerProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                                .addComponent(timerCurrentTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timerEndTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                                .addComponent(timerPeriodNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(timerPeriodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        matchControlTimerPanelLayout.setVerticalGroup(
            matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(timerNextPeriodButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(timerPlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(matchControlTimerPanelLayout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(timerResetTimerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(timerProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timerEndTimeLabel)
                    .addComponent(timerCurrentTimeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(matchControlTimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timerPeriodLabel)
                    .addComponent(timerPeriodNumberLabel))
                .addGap(17, 17, 17))
        );

        addPointsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addPointsComboBoxItemStateChanged(evt);
            }
        });

        jScrollPane2.setPreferredSize(new java.awt.Dimension(50, 50));

        pointsScoredTable.setBackground(new java.awt.Color(50, 50, 50));
        pointsScoredTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Player ID", "Nome", "Pontos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pointsScoredTable.setShowHorizontalLines(true);
        pointsScoredTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(pointsScoredTable);
        pointsScoredTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (pointsScoredTable.getColumnModel().getColumnCount() > 0) {
            pointsScoredTable.getColumnModel().getColumn(0).setResizable(false);
            pointsScoredTable.getColumnModel().getColumn(1).setResizable(false);
            pointsScoredTable.getColumnModel().getColumn(2).setResizable(false);
        }

        addPointButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sinal-de-mais-16.png"))); // NOI18N
        addPointButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addPointButton.setIconTextGap(0);
        addPointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPointButtonActionPerformed(evt);
            }
        });

        removePointButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sinal-de-menos-16.png"))); // NOI18N
        removePointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePointButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout matchControlPointsPanelLayout = new javax.swing.GroupLayout(matchControlPointsPanel);
        matchControlPointsPanel.setLayout(matchControlPointsPanelLayout);
        matchControlPointsPanelLayout.setHorizontalGroup(
            matchControlPointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchControlPointsPanelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(matchControlPointsPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(addPointsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addPointButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(removePointButton)
                .addGap(40, 40, 40))
        );
        matchControlPointsPanelLayout.setVerticalGroup(
            matchControlPointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchControlPointsPanelLayout.createSequentialGroup()
                .addGroup(matchControlPointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matchControlPointsPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(matchControlPointsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addPointButton)
                            .addComponent(removePointButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matchControlPointsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addPointsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout matchControlPanelLayout = new javax.swing.GroupLayout(matchControlPanel);
        matchControlPanel.setLayout(matchControlPanelLayout);
        matchControlPanelLayout.setHorizontalGroup(
            matchControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchControlPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(matchControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(matchControlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(matchControlPanelLayout.createSequentialGroup()
                        .addComponent(matchControlTimerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(matchControlPointsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        matchControlPanelLayout.setVerticalGroup(
            matchControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matchControlPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(matchControlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(matchControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(matchControlTimerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matchControlPointsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        endMatchButton.setText("Encerrar Partida");
        endMatchButton.setEnabled(false);
        endMatchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endMatchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout matchMainPanelLayout = new javax.swing.GroupLayout(matchMainPanel);
        matchMainPanel.setLayout(matchMainPanelLayout);
        matchMainPanelLayout.setHorizontalGroup(
            matchMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matchMainPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(matchMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(endMatchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(matchMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(matchControlPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 974, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, matchMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(matchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, matchMainPanelLayout.createSequentialGroup()
                                .addComponent(matchInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(matchStatusInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(25, 25, 25))
        );
        matchMainPanelLayout.setVerticalGroup(
            matchMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matchMainPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(matchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(matchMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(matchInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(matchStatusInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(matchControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(endMatchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        tournamentDialogMainPanel.add(matchMainPanel, "card2");

        tournamentParticipantsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sigla", "Nome", "Turma", "Treinador", "Pontos no torneio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tournamentParticipantsTable.setRowSelectionAllowed(false);
        tournamentParticipantsTable.setShowHorizontalLines(true);
        tournamentParticipantsTable.getTableHeader().setResizingAllowed(false);
        tournamentParticipantsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tournamentParticipantsTable);
        if (tournamentParticipantsTable.getColumnModel().getColumnCount() > 0) {
            tournamentParticipantsTable.getColumnModel().getColumn(0).setResizable(false);
            tournamentParticipantsTable.getColumnModel().getColumn(1).setResizable(false);
            tournamentParticipantsTable.getColumnModel().getColumn(2).setResizable(false);
            tournamentParticipantsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Times participantes");

        jButton2.setText("Retornar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(221, 221, 221));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/export-csv-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout participantTeamsMainPanelLayout = new javax.swing.GroupLayout(participantTeamsMainPanel);
        participantTeamsMainPanel.setLayout(participantTeamsMainPanelLayout);
        participantTeamsMainPanelLayout.setHorizontalGroup(
            participantTeamsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(participantTeamsMainPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(participantTeamsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(participantTeamsMainPanelLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(participantTeamsMainPanelLayout.createSequentialGroup()
                        .addGroup(participantTeamsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(participantTeamsMainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 924, Short.MAX_VALUE))
                        .addGap(50, 50, 50))))
        );
        participantTeamsMainPanelLayout.setVerticalGroup(
            participantTeamsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(participantTeamsMainPanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(participantTeamsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        tournamentDialogMainPanel.add(participantTeamsMainPanel, "card3");

        rankingMainPanel.setName(""); // NOI18N

        rankingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Time", "Pontos totais"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rankingTable.setRowSelectionAllowed(false);
        rankingTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        rankingTable.setShowHorizontalLines(true);
        rankingTable.getTableHeader().setResizingAllowed(false);
        rankingTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(rankingTable);
        if (rankingTable.getColumnModel().getColumnCount() > 0) {
            rankingTable.getColumnModel().getColumn(0).setResizable(false);
            rankingTable.getColumnModel().getColumn(1).setResizable(false);
            rankingTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ranking");

        jButton3.setText("Retornar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(221, 221, 221));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/export-csv-24.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        DefaultListCellRenderer tournamentRankingTeamsComboBoxRenderer = new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof Team) {
                    Team entity = (Team) value;
                    value = entity.getDisplayName();
                }

                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            }
        };
        tournamentRankingTeamsComboBox.setModel(new DefaultComboBoxModel());
        tournamentRankingTeamsComboBox.setRenderer(tournamentRankingTeamsComboBoxRenderer);
        tournamentRankingTeamsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tournamentRankingTeamsComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout rankingMainPanelLayout = new javax.swing.GroupLayout(rankingMainPanel);
        rankingMainPanel.setLayout(rankingMainPanelLayout);
        rankingMainPanelLayout.setHorizontalGroup(
            rankingMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rankingMainPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(rankingMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rankingMainPanelLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(rankingMainPanelLayout.createSequentialGroup()
                        .addGroup(rankingMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(rankingMainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tournamentRankingTeamsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 924, Short.MAX_VALUE))
                        .addGap(50, 50, 50))))
        );
        rankingMainPanelLayout.setVerticalGroup(
            rankingMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rankingMainPanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(rankingMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(tournamentRankingTeamsComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        tournamentDialogMainPanel.add(rankingMainPanel, "card4");

        javax.swing.GroupLayout tournamentDialogLayout = new javax.swing.GroupLayout(tournamentDialog.getContentPane());
        tournamentDialog.getContentPane().setLayout(tournamentDialogLayout);
        tournamentDialogLayout.setHorizontalGroup(
            tournamentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tournamentDialogMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        tournamentDialogLayout.setVerticalGroup(
            tournamentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tournamentDialogMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tournamentDialog.pack();

        classesDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        classesDialog.setTitle("Visualizar Turmas");
        classesDialog.setMinimumSize(null);
        classesDialog.setModal(true);
        classesDialog.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        classesDialog.setResizable(false);
        classesDialog.setSize(new java.awt.Dimension(1055, 810));
        classesDialog.setLocationRelativeTo(null);

        jClassesTable.setModel(visualizationDataController.getClassesTableModel(0));
        jClassesTable.setColumnSelectionAllowed(true);
        jClassesTable.setDragEnabled(true);
        jClassesTable.setEnabled(false);
        jClassesTable.setFillsViewportHeight(true);
        jClassesTable.setRowHeight(40);
        jClassesTable.setShowHorizontalLines(true);
        jClassesTable.setSurrendersFocusOnKeystroke(true);
        visualizationDataController.updateClassVisualizationCells();
        classesTableScrollPane.setViewportView(jClassesTable);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < jClassesTable.getColumnCount(); i++) {
            jClassesTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        javax.swing.GroupLayout classesTablePanelLayout = new javax.swing.GroupLayout(classesTablePanel);
        classesTablePanel.setLayout(classesTablePanelLayout);
        classesTablePanelLayout.setHorizontalGroup(
            classesTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(classesTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
        );
        classesTablePanelLayout.setVerticalGroup(
            classesTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(classesTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
        );

        classVisualizationLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        classVisualizationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        classVisualizationLabel.setText("Visualização de Turmas");
        classVisualizationLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        exportClassesToCSVButton.setText("Exportar em CSV");
        exportClassesToCSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportClassesToCSVButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout classesDialogLayout = new javax.swing.GroupLayout(classesDialog.getContentPane());
        classesDialog.getContentPane().setLayout(classesDialogLayout);
        classesDialogLayout.setHorizontalGroup(
            classesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classesDialogLayout.createSequentialGroup()
                .addGroup(classesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(classesDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(classesTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(classesDialogLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(classVisualizationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(classesDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportClassesToCSVButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        classesDialogLayout.setVerticalGroup(
            classesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classesDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(classVisualizationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportClassesToCSVButton)
                .addGap(10, 10, 10)
                .addComponent(classesTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        studentsDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        studentsDialog.setTitle("Visualizar Alunos");
        studentsDialog.setMinimumSize(null);
        studentsDialog.setModal(true);
        studentsDialog.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        studentsDialog.setResizable(false);
        studentsDialog.setSize(new java.awt.Dimension(1055, 810));
        studentsDialog.setLocationRelativeTo(null);

        jStudentsTable.setModel(visualizationDataController.getStudentsTableModel(0));
        jStudentsTable.setColumnSelectionAllowed(true);
        jStudentsTable.setDragEnabled(true);
        jStudentsTable.setEnabled(false);
        jStudentsTable.setFillsViewportHeight(true);
        jStudentsTable.setRowHeight(40);
        jStudentsTable.setShowHorizontalLines(true);
        jStudentsTable.setSurrendersFocusOnKeystroke(true);
        visualizationDataController.updateStudentVisualizationCells();
        studentsTableScrollPane1.setViewportView(jStudentsTable);
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < jStudentsTable.getColumnCount(); i++) {
            jStudentsTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        javax.swing.GroupLayout studentsTablePanelLayout = new javax.swing.GroupLayout(studentsTablePanel);
        studentsTablePanel.setLayout(studentsTablePanelLayout);
        studentsTablePanelLayout.setHorizontalGroup(
            studentsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentsTableScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
        );
        studentsTablePanelLayout.setVerticalGroup(
            studentsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentsTableScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
        );

        studentsVisualizationLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        studentsVisualizationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentsVisualizationLabel.setText("Visualização de Alunos");
        studentsVisualizationLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        exportStudentsToCSVButton.setText("Exportar em CSV");
        exportStudentsToCSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportStudentsToCSVButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentsDialogLayout = new javax.swing.GroupLayout(studentsDialog.getContentPane());
        studentsDialog.getContentPane().setLayout(studentsDialogLayout);
        studentsDialogLayout.setHorizontalGroup(
            studentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsDialogLayout.createSequentialGroup()
                .addGroup(studentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentsDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(studentsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(studentsDialogLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(studentsVisualizationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(studentsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportStudentsToCSVButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        studentsDialogLayout.setVerticalGroup(
            studentsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentsVisualizationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportStudentsToCSVButton)
                .addGap(10, 10, 10)
                .addComponent(studentsTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        teamsDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        teamsDialog.setTitle("Visualizar Times");
        teamsDialog.setMinimumSize(null);
        teamsDialog.setModal(true);
        teamsDialog.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        teamsDialog.setResizable(false);
        teamsDialog.setSize(new java.awt.Dimension(1055, 810));
        teamsDialog.setLocationRelativeTo(null);

        jTeamsTable.setModel(visualizationDataController.getTeamsTableModel(0));
        jTeamsTable.setColumnSelectionAllowed(true);
        jTeamsTable.setDragEnabled(true);
        jTeamsTable.setEnabled(false);
        jTeamsTable.setFillsViewportHeight(true);
        jTeamsTable.setRowHeight(40);
        jTeamsTable.setShowHorizontalLines(true);
        jTeamsTable.setSurrendersFocusOnKeystroke(true);
        visualizationDataController.updateTeamVisualizationCells();
        teamsTableScrollPane.setViewportView(jTeamsTable);
        jTeamsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < jTeamsTable.getColumnCount(); i++) {
            jTeamsTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        javax.swing.GroupLayout teamsTablePanelLayout = new javax.swing.GroupLayout(teamsTablePanel);
        teamsTablePanel.setLayout(teamsTablePanelLayout);
        teamsTablePanelLayout.setHorizontalGroup(
            teamsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(teamsTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
        );
        teamsTablePanelLayout.setVerticalGroup(
            teamsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(teamsTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
        );

        teamsVisualizationLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        teamsVisualizationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teamsVisualizationLabel.setText("Visualização de Times");
        teamsVisualizationLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        exportTeamsToSCVButton.setText("Exportar em CSV");
        exportTeamsToSCVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportTeamsToSCVButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teamsDialogLayout = new javax.swing.GroupLayout(teamsDialog.getContentPane());
        teamsDialog.getContentPane().setLayout(teamsDialogLayout);
        teamsDialogLayout.setHorizontalGroup(
            teamsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsDialogLayout.createSequentialGroup()
                .addGroup(teamsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(teamsDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(teamsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(teamsDialogLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(teamsVisualizationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(teamsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportTeamsToSCVButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        teamsDialogLayout.setVerticalGroup(
            teamsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(teamsVisualizationLabel)
                .addGap(10, 10, 10)
                .addComponent(exportTeamsToSCVButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamsTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        coachDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        coachDialog.setTitle("Visualizar Times");
        coachDialog.setMinimumSize(null);
        coachDialog.setModal(true);
        coachDialog.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        coachDialog.setResizable(false);
        coachDialog.setSize(new java.awt.Dimension(1055, 810));
        coachDialog.setLocationRelativeTo(null);

        jCoachTable.setModel(visualizationDataController.getCoachTableModel(0));
        jCoachTable.setColumnSelectionAllowed(true);
        jCoachTable.setDragEnabled(true);
        jCoachTable.setEnabled(false);
        jCoachTable.setFillsViewportHeight(true);
        jCoachTable.setRowHeight(40);
        jCoachTable.setShowHorizontalLines(true);
        jCoachTable.setSurrendersFocusOnKeystroke(true);
        visualizationDataController.updateCoachVisualizationCells();
        coachTableScrollPane.setViewportView(jCoachTable);
        jCoachTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int i = 0; i < jCoachTable.getColumnCount(); i++) {
            jCoachTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        javax.swing.GroupLayout coachTablePanelLayout = new javax.swing.GroupLayout(coachTablePanel);
        coachTablePanel.setLayout(coachTablePanelLayout);
        coachTablePanelLayout.setHorizontalGroup(
            coachTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coachTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
        );
        coachTablePanelLayout.setVerticalGroup(
            coachTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coachTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
        );

        coachVisualizationLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        coachVisualizationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coachVisualizationLabel.setText("Visualização de Treinadores");
        coachVisualizationLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        exportCoachToCSVButton.setText("Exportar em CSV");
        exportCoachToCSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportCoachToCSVButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout coachDialogLayout = new javax.swing.GroupLayout(coachDialog.getContentPane());
        coachDialog.getContentPane().setLayout(coachDialogLayout);
        coachDialogLayout.setHorizontalGroup(
            coachDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coachDialogLayout.createSequentialGroup()
                .addGroup(coachDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coachDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(coachTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(coachDialogLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(coachVisualizationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(coachDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportCoachToCSVButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        coachDialogLayout.setVerticalGroup(
            coachDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coachDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(coachVisualizationLabel)
                .addGap(4, 4, 4)
                .addComponent(exportCoachToCSVButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(coachTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        aboutDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        aboutDialog.setModal(true);
        aboutDialog.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        aboutDialog.setSize(new java.awt.Dimension(0, 0));
        aboutDialog.setType(java.awt.Window.Type.POPUP);

        jPanel1.setMinimumSize(new java.awt.Dimension(400, 300));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ClassLeague");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jEditorPane1.setEditable(false);
        jEditorPane1.setContentType("text/html"); // NOI18N
        jEditorPane1.setText("<html>\r\n    <body>\r\n        <h2>Sobre</h2>\n        <p style=\"margin-top: 0\"> Desenvolvido por Ezequiel, Francisco e Victor para a disciplina de Projeto Temático 2, da Universidade de Caxias do Sul (UCS).</p>\n        <br>\n        <h2>Ícones</h2>\n        <p style=\"margin-top: 0\">Icons by <a href='https://icons8.com'>Icons8</a></p>\n    </body>\r\n</html>\r\n");
        jEditorPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jEditorPane1.setFocusable(false);
        jEditorPane1.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                jEditorPane1HyperlinkUpdate(evt);
            }
        });
        jScrollPane6.setViewportView(jEditorPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        aboutDialog.pack();
        aboutDialog.setLocationRelativeTo(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClassLeague");
        setMinimumSize(null);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setSize(new java.awt.Dimension(0, 0));

        mainTabbedPane.setName("view"); // NOI18N
        mainTabbedPane.setPreferredSize(new java.awt.Dimension(1024, 768));
        mainTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainTabbedPaneStateChanged(evt);
            }
        });

        mainPanel.setName("main"); // NOI18N
        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        mainTopPanel.setLayout(new java.awt.GridBagLayout());

        jTournamentLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jTournamentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTournamentLabel.setText("Torneios");

        searchTournamentField.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Grey"));
        searchTournamentField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchTournamentField.setText("Pesquisar...");
        searchTournamentField.setToolTipText("fsdfsd");
        searchTournamentField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchTournamentField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTournamentFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTournamentFieldFocusLost(evt);
            }
        });
        searchTournamentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTournamentFieldActionPerformed(evt);
            }
        });

        searchTournamentBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/find-24.png"))); // NOI18N
        searchTournamentBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchTournamentBtn.setIconTextGap(0);
        searchTournamentBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        searchTournamentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTournamentBtnActionPerformed(evt);
            }
        });

        addTournamentBtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        addTournamentBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/plus-24.png"))); // NOI18N
        addTournamentBtn.setText("Novo torneio");
        addTournamentBtn.setIconTextGap(10);
        addTournamentBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        addTournamentBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addTournamentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTournamentBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainInnerTopPanelLayout = new javax.swing.GroupLayout(mainInnerTopPanel);
        mainInnerTopPanel.setLayout(mainInnerTopPanelLayout);
        mainInnerTopPanelLayout.setHorizontalGroup(
            mainInnerTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainInnerTopPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(addTournamentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 456, Short.MAX_VALUE)
                .addComponent(searchTournamentField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchTournamentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addComponent(jTournamentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainInnerTopPanelLayout.setVerticalGroup(
            mainInnerTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainInnerTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTournamentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainInnerTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTournamentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainInnerTopPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(mainInnerTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchTournamentField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchTournamentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        mainTopPanel.add(mainInnerTopPanel, gridBagConstraints);

        jTournamentSelectTable.setModel(tournamentController.getTournamentListTableModel(0));
        tournamentController.getFullTableModel();
        jTournamentSelectTable.setRowHeight(40);
        jTournamentSelectTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTournamentSelectTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTournamentSelectTable.setShowGrid(false);
        jTournamentSelectTable.setShowHorizontalLines(true);
        jTournamentSelectTable.getTableHeader().setReorderingAllowed(false);
        jTournamentSelectScrollPane.setViewportView(jTournamentSelectTable);
        jTournamentSelectTable.getColumnModel().getColumn(0).setMinWidth(0);
        jTournamentSelectTable.getColumnModel().getColumn(0).setMaxWidth(0);
        jTournamentSelectTable.getSelectionModel().addListSelectionListener((evt) -> {
            if (!evt.getValueIsAdjusting() && jTournamentSelectTable.getSelectedRow() != -1){
                int row = jTournamentSelectTable.getSelectedRow();
                String val = jTournamentSelectTable.getValueAt(row, 0).toString();
                tournamentController.enableTournamentDialog(val);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 50, 50);
        mainTopPanel.add(jTournamentSelectScrollPane, gridBagConstraints);

        mainPanel.add(mainTopPanel);

        mainBottomPanel.setLayout(new javax.swing.BoxLayout(mainBottomPanel, javax.swing.BoxLayout.Y_AXIS));
        mainPanel.add(mainBottomPanel);

        mainTabbedPane.addTab("Início", mainPanel);

        tournamentRegister.setName("tournament"); // NOI18N

        tournamentLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        tournamentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tournamentLabel.setText("Cadastro de Torneios");
        tournamentLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tournamentRegisterPanel.setBackground(new java.awt.Color(51, 51, 51));
        tournamentRegisterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        tournamentRegisterPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tournamentRegisterPanelMouseEntered(evt);
            }
        });

        tournamentNameLabel.setText("Nome do torneio");

        tournamentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tournamentNameFieldActionPerformed(evt);
            }
        });

        tournamentStartDateLabel.setText("Data de início");

        tournamentEndDateLabel.setText("Data de encerramento");

        try {
            tournamentStartDateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tournamentEndDateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tournamentSportLabel.setText("Esporte");

        tournamentSportComboBox.setAutoscrolls(true);
        tournamentSportComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tournamentSportComboBoxActionPerformed(evt);
            }
        });

        tournamentRegisterButton.setText("Cadastrar");
        tournamentRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tournamentRegisterButtonActionPerformed(evt);
            }
        });

        tournamentTeamsLabel.setText("Selecione os times participantes:");

        tournamentRegisterTeamsTable.setModel(registerController.getTournamentRegisterTableModel(0));
        tournamentRegisterTeamsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        registerController.updateTournamentTeamTableCells(tournamentSportComboBox.getSelectedIndex());
        jTournamentRegisterTeamScrollPane.setViewportView(tournamentRegisterTeamsTable);

        javax.swing.GroupLayout tournamentRegisterPanelLayout = new javax.swing.GroupLayout(tournamentRegisterPanel);
        tournamentRegisterPanel.setLayout(tournamentRegisterPanelLayout);
        tournamentRegisterPanelLayout.setHorizontalGroup(
            tournamentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tournamentRegisterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tournamentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tournamentNameLabel)
                    .addComponent(tournamentSportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentEndDateLabel)
                    .addComponent(tournamentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentStartDateLabel)
                    .addComponent(tournamentStartDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentEndDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentSportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentTeamsLabel)))
            .addGroup(tournamentRegisterPanelLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(tournamentRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(tournamentRegisterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTournamentRegisterTeamScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        tournamentRegisterPanelLayout.setVerticalGroup(
            tournamentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentRegisterPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(tournamentNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentStartDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentStartDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tournamentEndDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentEndDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tournamentSportLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tournamentSportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tournamentTeamsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTournamentRegisterTeamScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tournamentRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout tournamentRegisterLayout = new javax.swing.GroupLayout(tournamentRegister);
        tournamentRegister.setLayout(tournamentRegisterLayout);
        tournamentRegisterLayout.setHorizontalGroup(
            tournamentRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentRegisterLayout.createSequentialGroup()
                .addContainerGap(310, Short.MAX_VALUE)
                .addGroup(tournamentRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tournamentRegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tournamentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(350, Short.MAX_VALUE))
        );
        tournamentRegisterLayout.setVerticalGroup(
            tournamentRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tournamentRegisterLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(tournamentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentRegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainTabbedPane.addTab("Cadastro de Torneio", tournamentRegister);

        classRegister.setName("class"); // NOI18N
        classRegister.setLayout(new java.awt.GridBagLayout());

        title4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        title4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title4.setText("Cadastro de Turmas");
        title4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        classRegister.add(title4, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel14.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jLabel14, gridBagConstraints);

        jClassNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClassNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel5.add(jClassNameField, gridBagConstraints);

        jLabel15.setText("Número");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel5.add(jLabel15, gridBagConstraints);

        jClassNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClassNumberActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jClassNumber, gridBagConstraints);

        jLabel16.setText("Turno");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel5.add(jLabel16, gridBagConstraints);

        jClassShift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClassShiftActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jClassShift, gridBagConstraints);

        jLabel17.setText("Ciclo Escolar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel5.add(jLabel17, gridBagConstraints);

        jClassCycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClassCycleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel5.add(jClassCycle, gridBagConstraints);

        jButton8.setText("Cadastrar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerClassAction(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 10, 0);
        jPanel5.add(jButton8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        classRegister.add(jPanel5, gridBagConstraints);

        mainTabbedPane.addTab("Cadastro de Turma", classRegister);

        studentRegister2.setName("student"); // NOI18N
        studentRegister2.setLayout(new java.awt.GridBagLayout());

        jStudentRegisterTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jStudentRegisterTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jStudentRegisterTitle.setText("Cadastro de Alunos");
        jStudentRegisterTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        studentRegister2.add(jStudentRegisterTitle, gridBagConstraints);

        jStudentRegisterPanel.setBackground(new java.awt.Color(51, 51, 51));
        jStudentRegisterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jStudentRegisterPanel.setPreferredSize(new java.awt.Dimension(328, 480));

        jRegisterStudentNameLabel.setText("Nome");

        jRegisterStudentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterStudentNameFieldActionPerformed(evt);
            }
        });

        jRegisterStudentGenderLabel.setText("Sexo");

        JRegisterStudentClassLabel.setText("Turma");

        registerController.showClassesNumbers();
        jRegisterStudentClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterStudentClassComboBoxActionPerformed(evt);
            }
        });

        JRegisterStudentFatherNameLabel.setText("Nome do pai");

        jRegisterStudentFatherNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterStudentFatherNameFieldActionPerformed(evt);
            }
        });

        jRegisterStudentMotherNameLabel.setText("Nome da mãe");

        jRegisterStudentMotherNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterStudentMotherNameFieldActionPerformed(evt);
            }
        });

        JStudentRegisterButton.setText("Cadastrar");
        JStudentRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JStudentRegisterButtonActionPerformed(evt);
            }
        });

        jRegisterStudentBirthdateLabel.setText("Data de nascimento");

        jRegisterStudentSurnameLabel.setText("Sobrenome");

        jRegisterStudentCPFLabel.setText("CPF");

        jLabel1.setText("Telefone");

        try {
            jRegisterStudentTelephoneField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jRegisterStudentBirthdateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jRegisterStudentBirthdateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterStudentBirthdateFieldActionPerformed(evt);
            }
        });

        try {
            jRegisterStudentCPFField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        studentGenderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentGenderComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jStudentRegisterPanelLayout = new javax.swing.GroupLayout(jStudentRegisterPanel);
        jStudentRegisterPanel.setLayout(jStudentRegisterPanelLayout);
        jStudentRegisterPanelLayout.setHorizontalGroup(
            jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jStudentRegisterPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jStudentRegisterPanelLayout.createSequentialGroup()
                        .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JRegisterStudentFatherNameLabel)
                            .addComponent(jRegisterStudentGenderLabel)
                            .addComponent(jRegisterStudentFatherNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRegisterStudentMotherNameLabel)
                            .addComponent(jRegisterStudentMotherNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentGenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jStudentRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jRegisterStudentClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jStudentRegisterPanelLayout.createSequentialGroup()
                        .addComponent(JStudentRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))))
            .addGroup(jStudentRegisterPanelLayout.createSequentialGroup()
                .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jStudentRegisterPanelLayout.createSequentialGroup()
                        .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRegisterStudentBirthdateLabel)
                            .addComponent(jRegisterStudentBirthdateField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRegisterStudentCPFField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRegisterStudentCPFLabel)))
                    .addGroup(jStudentRegisterPanelLayout.createSequentialGroup()
                        .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRegisterStudentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRegisterStudentNameLabel)
                            .addComponent(jLabel1)
                            .addComponent(jRegisterStudentSurnameLabel)
                            .addComponent(jRegisterStudentSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JRegisterStudentClassLabel)
                            .addComponent(jRegisterStudentTelephoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jStudentRegisterPanelLayout.setVerticalGroup(
            jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jStudentRegisterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRegisterStudentNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentSurnameLabel)
                .addGap(4, 4, 4)
                .addComponent(jRegisterStudentSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jStudentRegisterPanelLayout.createSequentialGroup()
                        .addGroup(jStudentRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRegisterStudentBirthdateLabel)
                            .addComponent(jRegisterStudentCPFLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRegisterStudentBirthdateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jStudentRegisterPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jRegisterStudentCPFField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentGenderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentGenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JRegisterStudentFatherNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentFatherNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentMotherNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentMotherNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentTelephoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JRegisterStudentClassLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterStudentClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JStudentRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        studentRegister2.add(jStudentRegisterPanel, gridBagConstraints);

        mainTabbedPane.addTab("Cadastro de Aluno", studentRegister2);

        teamRegisterPanel.setName("team"); // NOI18N
        teamRegisterPanel.setLayout(new java.awt.GridBagLayout());

        jTeamRegisterTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jTeamRegisterTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTeamRegisterTitle.setText("Cadastro de Time");
        jTeamRegisterTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        teamRegisterPanel.add(jTeamRegisterTitle, gridBagConstraints);

        jInnerTeamRegisterPanel.setBackground(new java.awt.Color(51, 51, 51));
        jInnerTeamRegisterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jInnerTeamRegisterPanel.setLayout(new java.awt.GridBagLayout());

        jTeamRegisterNameLabel.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jInnerTeamRegisterPanel.add(jTeamRegisterNameLabel, gridBagConstraints);

        jTeamRegisterNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTeamRegisterNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jInnerTeamRegisterPanel.add(jTeamRegisterNameField, gridBagConstraints);

        jTeamRegisterAcronymLabel.setText("Sigla");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jInnerTeamRegisterPanel.add(jTeamRegisterAcronymLabel, gridBagConstraints);

        jTeamRegisterAcronymField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTeamRegisterAcronymFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jInnerTeamRegisterPanel.add(jTeamRegisterAcronymField, gridBagConstraints);

        jTeamRegisterSportLabel.setText("Esporte");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jInnerTeamRegisterPanel.add(jTeamRegisterSportLabel, gridBagConstraints);

        jTeamRegisterSportComboBox.setAutoscrolls(true);
        jTeamRegisterSportComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jTeamRegisterSportComboBoxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jInnerTeamRegisterPanel.add(jTeamRegisterSportComboBox, gridBagConstraints);

        jTeamRegisterClassPickerLabel.setText("Selecionar turma");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jInnerTeamRegisterPanel.add(jTeamRegisterClassPickerLabel, gridBagConstraints);

        jTeamRegisterClassPickerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTeamRegisterClassPickerComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jInnerTeamRegisterPanel.add(jTeamRegisterClassPickerComboBox, gridBagConstraints);

        jTeamRegisterButton.setText("Cadastrar");
        jTeamRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTeamRegisterButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 10, 0);
        jInnerTeamRegisterPanel.add(jTeamRegisterButton, gridBagConstraints);

        jTeamRegisterStudentsTable.setModel(registerController.getTeamRegisterTableModel(0));
        jTeamRegisterStudentsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTeamRegisterStudentsScrollPane.setViewportView(jTeamRegisterStudentsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 150;
        gridBagConstraints.weighty = 1.0;
        jInnerTeamRegisterPanel.add(jTeamRegisterStudentsScrollPane, gridBagConstraints);

        jTeamRegisterCoachPickerLabel.setText("Treinador");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jInnerTeamRegisterPanel.add(jTeamRegisterCoachPickerLabel, gridBagConstraints);

        DefaultListCellRenderer teamRegisterCoachPickerRenderer = new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof Coach) {
                    Coach entity = (Coach) value;
                    value = entity.getDisplayName();
                }

                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            }
        };
        DefaultComboBoxModel model = new DefaultComboBoxModel(registerController.getCoachesToArray());
        jTeamRegisterCoachPickerComboBox.setModel(model);

        jTeamRegisterCoachPickerComboBox.setRenderer(teamRegisterCoachPickerRenderer);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jInnerTeamRegisterPanel.add(jTeamRegisterCoachPickerComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 225;
        teamRegisterPanel.add(jInnerTeamRegisterPanel, gridBagConstraints);

        mainTabbedPane.addTab("Cadastro de Time", teamRegisterPanel);

        coachRegister.setName("coach"); // NOI18N
        coachRegister.setLayout(new java.awt.GridBagLayout());

        jCoachRegisterTitle1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jCoachRegisterTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCoachRegisterTitle1.setText("Cadastro de Treinadores");
        jCoachRegisterTitle1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        coachRegister.add(jCoachRegisterTitle1, gridBagConstraints);

        coachRegisterPanel.setBackground(new java.awt.Color(51, 51, 51));
        coachRegisterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        coachSurnameLabel.setText("Sobrenome");

        coachNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachNameFieldActionPerformed(evt);
            }
        });

        coachGenderLabel.setText("Sexo");

        coachNameLabel1.setText("Nome");

        coachSurnameField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachSurnameField1ActionPerformed(evt);
            }
        });

        coachPhoneLabel.setText("Telefone");

        coachCPFLabel.setText("CPF");

        coachBirthDateLabel.setText("Data de Nascimento");

        coachSportLabel.setText("Esporte");

        JCoachRegisterButton1.setText("Cadastrar");
        JCoachRegisterButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCoachRegisterButton1ActionPerformed(evt);
            }
        });

        try {
            coachBirthDateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        coachBirthDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachBirthDateFieldActionPerformed(evt);
            }
        });

        try {
            coachCPFField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            coachPhoneField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        coachSportComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachSportComboBoxActionPerformed(evt);
            }
        });

        coachGenderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coachGenderComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout coachRegisterPanelLayout = new javax.swing.GroupLayout(coachRegisterPanel);
        coachRegisterPanel.setLayout(coachRegisterPanelLayout);
        coachRegisterPanelLayout.setHorizontalGroup(
            coachRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coachRegisterPanelLayout.createSequentialGroup()
                .addGroup(coachRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coachRegisterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(coachRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coachSurnameLabel)
                            .addComponent(coachNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coachNameLabel1)
                            .addComponent(coachGenderLabel)
                            .addComponent(coachSurnameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coachPhoneLabel)
                            .addComponent(coachCPFLabel)
                            .addComponent(coachBirthDateLabel)
                            .addComponent(coachSportLabel)))
                    .addGroup(coachRegisterPanelLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(JCoachRegisterButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(coachRegisterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(coachRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(coachPhoneField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coachGenderComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 183, Short.MAX_VALUE)
                            .addComponent(coachCPFField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coachBirthDateField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coachSportComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        coachRegisterPanelLayout.setVerticalGroup(
            coachRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coachRegisterPanelLayout.createSequentialGroup()
                .addComponent(coachNameLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(coachSurnameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachSurnameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(coachGenderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachGenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachPhoneLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(coachCPFLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachCPFField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachBirthDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachBirthDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(coachSportLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coachSportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(JCoachRegisterButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        coachRegister.add(coachRegisterPanel, gridBagConstraints);

        mainTabbedPane.addTab("Cadastro de Treinadores", coachRegister);

        jViewRegisterTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jViewRegisterTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jViewRegisterTitle.setText("Visualização de Dados");
        jViewRegisterTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        viewClassesButton.setText("Visualizar Turmas");
        viewClassesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewClassesButtonActionPerformed(evt);
            }
        });

        viewStudentsButton1.setText("Visualizar Alunos");
        viewStudentsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStudentsButton1ActionPerformed(evt);
            }
        });

        viewTeamsButton2.setText("Visualizar Times");
        viewTeamsButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTeamsButton2ActionPerformed(evt);
            }
        });

        viewCoachButton.setText("Visualizar Treinadores");
        viewCoachButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCoachButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewListsRegisterPanelLayout = new javax.swing.GroupLayout(ViewListsRegisterPanel);
        ViewListsRegisterPanel.setLayout(ViewListsRegisterPanelLayout);
        ViewListsRegisterPanelLayout.setHorizontalGroup(
            ViewListsRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewListsRegisterPanelLayout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addComponent(viewClassesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewStudentsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewTeamsButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewCoachButton)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        ViewListsRegisterPanelLayout.setVerticalGroup(
            ViewListsRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewListsRegisterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ViewListsRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewClassesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewStudentsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewTeamsButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewCoachButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout viewListsRegisterLayout = new javax.swing.GroupLayout(viewListsRegister);
        viewListsRegister.setLayout(viewListsRegisterLayout);
        viewListsRegisterLayout.setHorizontalGroup(
            viewListsRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewListsRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewListsRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jViewRegisterTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViewListsRegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        viewListsRegisterLayout.setVerticalGroup(
            viewListsRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewListsRegisterLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jViewRegisterTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(ViewListsRegisterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(365, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Visualização", viewListsRegister);

        jMenu1.setText("Ajuda");

        jMenuItem1.setText("Sobre");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1040, 776));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addTournamentBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addTournamentBtnActionPerformed
        mainTabbedPane.setSelectedIndex(1);
    }//GEN-LAST:event_addTournamentBtnActionPerformed

    private void searchTournamentFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_searchTournamentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTournamentFieldActionPerformed

    private void mainTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainTabbedPaneStateChanged
        JTabbedPane tp = (JTabbedPane) evt.getSource(); 
        
        String selectedTabName = tp.getSelectedComponent().getName();
        if (selectedTabName != null) {
            switch(selectedTabName) {
                case "main":
                    tournamentController.getFullTableModel();
                    break;
                case "tournament":
                    registerController.updateTournamentTeamTableCells(tournamentSportComboBox.getSelectedIndex());
                    break;
                case "team":
                    ControllerUtilities.resetTable(jTeamRegisterStudentsTable);
                    //registerController.showCoachesNames();
                    break;
            } 
            
            registerController.updateComboBoxes();
        }
    }//GEN-LAST:event_mainTabbedPaneStateChanged

    private void JStudentRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JStudentRegisterButtonActionPerformed
        registerController.registerStudent();
    }//GEN-LAST:event_JStudentRegisterButtonActionPerformed

    private void jRegisterStudentClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterStudentClassComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRegisterStudentClassComboBoxActionPerformed

    private void jRegisterStudentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterStudentNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRegisterStudentNameFieldActionPerformed

    private void jClassNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClassNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jClassNameFieldActionPerformed

    private void jClassNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClassNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jClassNumberActionPerformed

    private void jClassShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClassShiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jClassShiftActionPerformed

    private void registerClassAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerClassAction
        registerController.registerClass();
    }//GEN-LAST:event_registerClassAction

    private void jClassCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClassCycleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jClassCycleActionPerformed

    private void jStudentFatherNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStudentFatherNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jStudentFatherNameFieldActionPerformed

    private void jRegisterStudentFatherNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterStudentFatherNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRegisterStudentFatherNameFieldActionPerformed

    private void jRegisterStudentMotherNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterStudentMotherNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRegisterStudentMotherNameFieldActionPerformed

    private void jTeamRegisterNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTeamRegisterNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTeamRegisterNameFieldActionPerformed

    private void jTeamRegisterClassPickerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTeamRegisterClassPickerComboBoxActionPerformed
        registerController.updateTeamTableCells(jTeamRegisterClassPickerComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_jTeamRegisterClassPickerComboBoxActionPerformed

    private void jTeamRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTeamRegisterButtonActionPerformed
        registerController.registerTeam(jTeamRegisterStudentsTable);
    }//GEN-LAST:event_jTeamRegisterButtonActionPerformed

    private void jTeamRegisterAcronymFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTeamRegisterAcronymFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTeamRegisterAcronymFieldActionPerformed

    private void coachSurnameField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachSurnameField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachSurnameField1ActionPerformed

    private void coachNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachNameFieldActionPerformed

    private void JCoachRegisterButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCoachRegisterButton1ActionPerformed
        // TODO add your handling code here:
        this.registerController.createCoach();
    }//GEN-LAST:event_JCoachRegisterButton1ActionPerformed

    private void coachBirthDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachBirthDateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachBirthDateFieldActionPerformed

    private void tournamentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tournamentNameFieldActionPerformed

    private void tournamentSportComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentSportComboBoxActionPerformed
        this.registerController.updateTournamentTeamTableCells(tournamentSportComboBox.getSelectedIndex());
    }//GEN-LAST:event_tournamentSportComboBoxActionPerformed

    private void tournamentRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentRegisterButtonActionPerformed
        this.registerController.createTournament(tournamentRegisterTeamsTable);
    }//GEN-LAST:event_tournamentRegisterButtonActionPerformed

    private void tournamentRegisterPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tournamentRegisterPanelMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tournamentRegisterPanelMouseEntered
    private void jRegisterStudentBirthdateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterStudentBirthdateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRegisterStudentBirthdateFieldActionPerformed

    private void searchTournamentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTournamentBtnActionPerformed
        String text = searchTournamentField.getText();
        if (text.equals("Pesquisar...")) {
            tournamentController.getQueriedTableModel("");
        } else {
            tournamentController.getQueriedTableModel(text);
        }   
    }//GEN-LAST:event_searchTournamentBtnActionPerformed

    private void timerNextPeriodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timerNextPeriodButtonActionPerformed
        matchController.endPeriod();
    }//GEN-LAST:event_timerNextPeriodButtonActionPerformed
    
    private void timerPlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timerPlayButtonActionPerformed
        if (timerPlayButton.isSelected())
            matchController.startTimer();
        else
            matchController.freezeTimer();
    }//GEN-LAST:event_timerPlayButtonActionPerformed

    private void timerResetTimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timerResetTimerButtonActionPerformed
        matchController.resetTimer();
    }//GEN-LAST:event_timerResetTimerButtonActionPerformed

    private void startNewMatchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNewMatchButtonActionPerformed
        setAndShowActiveTournamentDialogCard("card2");
        
        matchPointsController.resetPointsComponents();
        matchPointsController.fillPointsComboBox();
        matchPointsController.fillTeamPlayersList();
    }//GEN-LAST:event_startNewMatchButtonActionPerformed

    private void tournamentDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_tournamentDialogWindowClosed
        tournamentController.resetTournamentWindow();
    }//GEN-LAST:event_tournamentDialogWindowClosed

    private void endMatchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endMatchButtonActionPerformed
        matchController.endMatch();
    }//GEN-LAST:event_endMatchButtonActionPerformed

    private void tournamentDialogComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tournamentDialogComponentShown
    }//GEN-LAST:event_tournamentDialogComponentShown

    private void removePointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePointButtonActionPerformed
        matchPointsController.insertPoint(-1);
    }//GEN-LAST:event_removePointButtonActionPerformed

    private void addPointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPointButtonActionPerformed
        matchPointsController.insertPoint(+1);
    }//GEN-LAST:event_addPointButtonActionPerformed

    private void coachSportComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachSportComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachSportComboBoxActionPerformed

    private void coachGenderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coachGenderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coachGenderComboBoxActionPerformed

    private void studentGenderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentGenderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentGenderComboBoxActionPerformed

    private void startNewPhaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNewPhaseButtonActionPerformed
        tournamentController.startNextPhase();
    }//GEN-LAST:event_startNewPhaseButtonActionPerformed

    private void tournamentDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_tournamentDialogWindowClosing
        if (tournamentDialogActiveLayout.equals("card2")) {
            if (MatchTimer.getState().equals(MatchState.ENDED)) {
                matchController.endMatch();
            } else if (MatchTimer.getState().equals(MatchState.WAITING)) {
                setAndShowActiveTournamentDialogCard("card1");
            } else {
                JOptionPane.showMessageDialog(
                        tournamentDialog, 
                        "Partida em andamento. Não é possível fechar a janela."
                );
            }
        }
    }//GEN-LAST:event_tournamentDialogWindowClosing

    private void addPointsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addPointsComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            matchPointsController.fillTeamPlayersList();
        }
    }//GEN-LAST:event_addPointsComboBoxItemStateChanged

    private void viewClassesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewClassesButtonActionPerformed
        // TODO add your handling code here:
        this.classesDialog.setVisible(true);
    }//GEN-LAST:event_viewClassesButtonActionPerformed

    private void viewStudentsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStudentsButton1ActionPerformed
        // TODO add your handling code here:
        this.studentsDialog.setVisible(true);
    }//GEN-LAST:event_viewStudentsButton1ActionPerformed

    private void viewTeamsButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTeamsButton2ActionPerformed
        // TODO add your handling code here:
        this.teamsDialog.setVisible(true);
    }//GEN-LAST:event_viewTeamsButton2ActionPerformed

    private void viewCoachButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCoachButtonActionPerformed
        // TODO add your handling code here:
        this.coachDialog.setVisible(true);
    }//GEN-LAST:event_viewCoachButtonActionPerformed

    public void setAndShowActiveTournamentDialogLayout(String cardName) {
        int op = cardName.equals("card1") ? DISPOSE_ON_CLOSE : DO_NOTHING_ON_CLOSE;
        tournamentDialog.setDefaultCloseOperation(op);
        tournamentDialogActiveLayout = cardName;
        cl.show(tournamentDialogMainPanel, cardName);
        
        if (tournamentDialogActiveLayout.equals("card1")) {
            tournamentController.fillTournamentData();
        } else if (tournamentDialogActiveLayout.equals("card2")) {
            matchController.setMatchInfo();
        }
    }
    
    private void viewTeamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTeamsButtonActionPerformed
        setAndShowActiveTournamentDialogCard("card3");
    }//GEN-LAST:event_viewTeamsButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setAndShowActiveTournamentDialogCard("card1");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tournamentHistoryComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tournamentHistoryComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
           tournamentController.fillPreviousMatchesTableData();
        }
    }//GEN-LAST:event_tournamentHistoryComboBoxItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ControllerUtilities.convertTableToCSV(participantTeamsMainPanel, tournamentParticipantsTable, "Participantes do Torneio");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void exportClassesToCSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportClassesToCSVButtonActionPerformed
        ControllerUtilities.convertTableToCSV(classesTablePanel, jClassesTable, "Tabela de Turmas");
    }//GEN-LAST:event_exportClassesToCSVButtonActionPerformed

    private void exportCoachToCSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportCoachToCSVButtonActionPerformed
        ControllerUtilities.convertTableToCSV(coachTablePanel, jCoachTable, "Tabela de Treinadores");
    }//GEN-LAST:event_exportCoachToCSVButtonActionPerformed

    private void exportStudentsToCSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportStudentsToCSVButtonActionPerformed
         ControllerUtilities.convertTableToCSV(studentsTablePanel, jStudentsTable, "Tabela de Alunos");
    }//GEN-LAST:event_exportStudentsToCSVButtonActionPerformed

    private void exportTeamsToSCVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportTeamsToSCVButtonActionPerformed
        ControllerUtilities.convertTableToCSV(teamsTablePanel, jTeamsTable, "Tabela de Times");
    }//GEN-LAST:event_exportTeamsToSCVButtonActionPerformed

    private void jTeamRegisterSportComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jTeamRegisterSportComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            registerController.showCoachesNames();
        }
    }//GEN-LAST:event_jTeamRegisterSportComboBoxItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ControllerUtilities.convertTableToCSV(rankingMainPanel, rankingTable, "Ranking de Alunos do Torneio");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setAndShowActiveTournamentDialogCard("card1");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tournamentRankingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentRankingButtonActionPerformed
        setAndShowActiveTournamentDialogCard("card4");
    }//GEN-LAST:event_tournamentRankingButtonActionPerformed

    private void tournamentRankingTeamsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tournamentRankingTeamsComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            tournamentDataController.updateTournamentRankingsList();
        }
    }//GEN-LAST:event_tournamentRankingTeamsComboBoxItemStateChanged

    private void jEditorPane1HyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_jEditorPane1HyperlinkUpdate
        if (HyperlinkEvent.EventType.ACTIVATED.equals(evt.getEventType())) {
            Desktop desktop = Desktop.getDesktop();
            
            try {
                desktop.browse(evt.getURL().toURI());
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jEditorPane1HyperlinkUpdate

    private void searchTournamentFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTournamentFieldFocusGained
        if (searchTournamentField.getText().equals("Pesquisar...")) {
            searchTournamentField.setText("");
            searchTournamentField.setForeground(Color.WHITE);
        }
    }//GEN-LAST:event_searchTournamentFieldFocusGained

    private void searchTournamentFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTournamentFieldFocusLost
        if (searchTournamentField.getText().isEmpty()) {
            searchTournamentField.setForeground(Color.GRAY);
            searchTournamentField.setText("Pesquisar...");
        }
    }//GEN-LAST:event_searchTournamentFieldFocusLost

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        aboutDialog.setVisible(true);
        aboutDialog.setEnabled(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void setAndShowActiveTournamentDialogCard(String cardName) {
        int op = DISPOSE_ON_CLOSE;
        
        switch (cardName) {
            case "card1":
                op = DISPOSE_ON_CLOSE;
                break;
            case "card2": 
                op = DO_NOTHING_ON_CLOSE;
                break;
            case "card3":
                op = DISPOSE_ON_CLOSE;
                break;
        }
        
        tournamentDialog.setDefaultCloseOperation(op);
        tournamentDialogActiveLayout = cardName;
        cl.show(tournamentDialogMainPanel, cardName);
        
        if (tournamentDialogActiveLayout.equals("card1")) {
            tournamentController.fillTournamentData();
            tournamentDialog.setVisible(true);
        } else if (tournamentDialogActiveLayout.equals("card2")) {
            matchController.setMatchInfo();
        } else if (tournamentDialogActiveLayout.equals("card3")) {
            tournamentDataController.setupTournamentParticipants();
        } else if (tournamentDialogActiveLayout.equals("card4")) {
            tournamentDataController.setupTournamentRankings();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton JCoachRegisterButton1;
    public javax.swing.JLabel JRegisterStudentClassLabel;
    public javax.swing.JLabel JRegisterStudentFatherNameLabel;
    public javax.swing.JButton JStudentRegisterButton;
    public javax.swing.JPanel ViewListsRegisterPanel;
    public javax.swing.JDialog aboutDialog;
    public javax.swing.JButton addPointButton;
    public javax.swing.JComboBox<String> addPointsComboBox;
    public javax.swing.JButton addTournamentBtn;
    public javax.swing.JPanel classRegister;
    public javax.swing.JLabel classVisualizationLabel;
    public javax.swing.JDialog classesDialog;
    public javax.swing.JPanel classesTablePanel;
    public javax.swing.JScrollPane classesTableScrollPane;
    public javax.swing.JFormattedTextField coachBirthDateField;
    public javax.swing.JLabel coachBirthDateLabel;
    public javax.swing.JFormattedTextField coachCPFField;
    public javax.swing.JLabel coachCPFLabel;
    public javax.swing.JDialog coachDialog;
    public javax.swing.JComboBox<String> coachGenderComboBox;
    public javax.swing.JLabel coachGenderLabel;
    public javax.swing.JTextField coachNameField;
    public javax.swing.JLabel coachNameLabel1;
    public javax.swing.JFormattedTextField coachPhoneField;
    public javax.swing.JLabel coachPhoneLabel;
    public javax.swing.JPanel coachRegister;
    public javax.swing.JPanel coachRegisterPanel;
    public javax.swing.JComboBox<String> coachSportComboBox;
    public javax.swing.JLabel coachSportLabel;
    public javax.swing.JTextField coachSurnameField1;
    public javax.swing.JLabel coachSurnameLabel;
    public javax.swing.JPanel coachTablePanel;
    public javax.swing.JScrollPane coachTableScrollPane;
    public javax.swing.JLabel coachVisualizationLabel;
    public javax.swing.JButton endMatchButton;
    public javax.swing.JButton exportClassesToCSVButton;
    public javax.swing.JButton exportCoachToCSVButton;
    public javax.swing.JButton exportStudentsToCSVButton;
    public javax.swing.JButton exportTeamsToSCVButton;
    public javax.swing.JLabel firstTeamNameLabel;
    public javax.swing.JLabel firstTeamScoreLabel;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton8;
    public javax.swing.JComboBox<String> jClassCycle;
    public javax.swing.JTextField jClassNameField;
    public javax.swing.JTextField jClassNumber;
    public javax.swing.JComboBox<String> jClassShift;
    public javax.swing.JTable jClassesTable;
    public javax.swing.JLabel jCoachRegisterTitle1;
    public javax.swing.JTable jCoachTable;
    public javax.swing.JEditorPane jEditorPane1;
    public javax.swing.JPanel jInnerTeamRegisterPanel;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JMenu jMenu1;
    public javax.swing.JMenuBar jMenuBar1;
    public javax.swing.JMenuItem jMenuItem1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JFormattedTextField jRegisterStudentBirthdateField;
    public javax.swing.JLabel jRegisterStudentBirthdateLabel;
    public javax.swing.JFormattedTextField jRegisterStudentCPFField;
    public javax.swing.JLabel jRegisterStudentCPFLabel;
    public javax.swing.JComboBox<String> jRegisterStudentClassComboBox;
    public javax.swing.JTextField jRegisterStudentFatherNameField;
    public javax.swing.JLabel jRegisterStudentGenderLabel;
    public javax.swing.JTextField jRegisterStudentMotherNameField;
    public javax.swing.JLabel jRegisterStudentMotherNameLabel;
    public javax.swing.JTextField jRegisterStudentNameField;
    public javax.swing.JLabel jRegisterStudentNameLabel;
    public javax.swing.JTextField jRegisterStudentSurnameField;
    public javax.swing.JLabel jRegisterStudentSurnameLabel;
    public javax.swing.JFormattedTextField jRegisterStudentTelephoneField;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JScrollPane jScrollPane6;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JSeparator jSeparator2;
    public javax.swing.JSeparator jSeparator3;
    public javax.swing.JSeparator jSeparator4;
    public javax.swing.JPanel jStudentRegisterPanel;
    public javax.swing.JLabel jStudentRegisterTitle;
    public javax.swing.JTable jStudentsTable;
    public javax.swing.JTextField jTeamRegisterAcronymField;
    public javax.swing.JLabel jTeamRegisterAcronymLabel;
    public javax.swing.JButton jTeamRegisterButton;
    public javax.swing.JComboBox<String> jTeamRegisterClassPickerComboBox;
    public javax.swing.JLabel jTeamRegisterClassPickerLabel;
    public javax.swing.JComboBox<Coach> jTeamRegisterCoachPickerComboBox;
    public javax.swing.JLabel jTeamRegisterCoachPickerLabel;
    public javax.swing.JTextField jTeamRegisterNameField;
    public javax.swing.JLabel jTeamRegisterNameLabel;
    public javax.swing.JComboBox<String> jTeamRegisterSportComboBox;
    public javax.swing.JLabel jTeamRegisterSportLabel;
    public javax.swing.JScrollPane jTeamRegisterStudentsScrollPane;
    public javax.swing.JTable jTeamRegisterStudentsTable;
    public javax.swing.JLabel jTeamRegisterTitle;
    public javax.swing.JTable jTeamsTable;
    public javax.swing.JLabel jTournamentLabel;
    public javax.swing.JScrollPane jTournamentRegisterTeamScrollPane;
    public javax.swing.JScrollPane jTournamentSelectScrollPane;
    public javax.swing.JTable jTournamentSelectTable;
    public javax.swing.JLabel jViewRegisterTitle;
    public javax.swing.JPanel mainBottomPanel;
    public javax.swing.JPanel mainInnerTopPanel;
    public javax.swing.JPanel mainPanel;
    public javax.swing.JTabbedPane mainTabbedPane;
    public javax.swing.JPanel mainTopPanel;
    public javax.swing.JPanel matchControlPanel;
    public javax.swing.JPanel matchControlPointsPanel;
    public javax.swing.JPanel matchControlTimerPanel;
    public javax.swing.JLabel matchControlTitle;
    public javax.swing.JPanel matchInfoPanel;
    public javax.swing.JLabel matchInfoTitle;
    public javax.swing.JPanel matchMainPanel;
    public javax.swing.JLabel matchPhaseDataLabel;
    public javax.swing.JLabel matchStartDateDataLabel;
    public javax.swing.JLabel matchStartTimeDataLabel;
    public javax.swing.JPanel matchStatusInfoPanel;
    public javax.swing.JLabel matchTitle;
    public javax.swing.JPanel participantTeamsMainPanel;
    public javax.swing.JTable pointsScoredTable;
    public javax.swing.JPanel rankingMainPanel;
    public javax.swing.JTable rankingTable;
    public javax.swing.JButton removePointButton;
    public javax.swing.JButton searchTournamentBtn;
    public javax.swing.JTextField searchTournamentField;
    public javax.swing.JLabel secondTeamNameLabel;
    public javax.swing.JLabel secondTeamScoreLabel;
    public javax.swing.JButton startNewMatchButton;
    public javax.swing.JButton startNewPhaseButton;
    public javax.swing.JComboBox<String> studentGenderComboBox;
    public javax.swing.JPanel studentRegister2;
    public javax.swing.JDialog studentsDialog;
    public javax.swing.JPanel studentsTablePanel;
    public javax.swing.JScrollPane studentsTableScrollPane1;
    public javax.swing.JLabel studentsVisualizationLabel;
    public javax.swing.JPanel teamRegisterPanel;
    public javax.swing.JDialog teamsDialog;
    public javax.swing.JPanel teamsTablePanel;
    public javax.swing.JScrollPane teamsTableScrollPane;
    public javax.swing.JLabel teamsVisualizationLabel;
    public javax.swing.JLabel timerCurrentTimeLabel;
    public javax.swing.JLabel timerEndTimeLabel;
    public javax.swing.JButton timerNextPeriodButton;
    public javax.swing.JLabel timerPeriodLabel;
    public javax.swing.JLabel timerPeriodNumberLabel;
    public javax.swing.JToggleButton timerPlayButton;
    public javax.swing.JProgressBar timerProgressBar;
    public javax.swing.JButton timerResetTimerButton;
    public javax.swing.JLabel title4;
    public javax.swing.JDialog tournamentDialog;
    public javax.swing.JLabel tournamentDialogEndDateField;
    public javax.swing.JLabel tournamentDialogEndInfoData;
    public javax.swing.JLabel tournamentDialogInfoIcon;
    public javax.swing.JLabel tournamentDialogInfoTitleLabel;
    public javax.swing.JPanel tournamentDialogMainPanel;
    public javax.swing.JLabel tournamentDialogNameData;
    public javax.swing.JLabel tournamentDialogPhaseInfoData;
    public javax.swing.JLabel tournamentDialogPhaseLabel;
    public javax.swing.JLabel tournamentDialogSportTypeInfoData;
    public javax.swing.JLabel tournamentDialogSportTypeLabel;
    public javax.swing.JLabel tournamentDialogStartDateField;
    public javax.swing.JLabel tournamentDialogStartDateInfoData;
    public javax.swing.JFormattedTextField tournamentEndDateField;
    public javax.swing.JLabel tournamentEndDateLabel;
    public javax.swing.JComboBox<String> tournamentHistoryComboBox;
    public javax.swing.JPanel tournamentInfoPanel;
    public javax.swing.JLabel tournamentLabel;
    public javax.swing.JPanel tournamentMainPanel;
    public javax.swing.JPanel tournamentMatchPanel;
    public javax.swing.JTable tournamentMatchesTable;
    public javax.swing.JScrollPane tournamentMatchesTableScrollPane;
    public javax.swing.JTextField tournamentNameField;
    public javax.swing.JLabel tournamentNameLabel;
    public javax.swing.JLabel tournamentNextMatchesTable;
    public javax.swing.JTable tournamentParticipantsTable;
    public javax.swing.JTable tournamentPreviousMatchesTable;
    public javax.swing.JButton tournamentRankingButton;
    public javax.swing.JComboBox<Team> tournamentRankingTeamsComboBox;
    public javax.swing.JPanel tournamentRegister;
    public javax.swing.JButton tournamentRegisterButton;
    public javax.swing.JPanel tournamentRegisterPanel;
    public javax.swing.JTable tournamentRegisterTeamsTable;
    public javax.swing.JPanel tournamentSidePanel;
    public javax.swing.JComboBox<String> tournamentSportComboBox;
    public javax.swing.JLabel tournamentSportLabel;
    public javax.swing.JFormattedTextField tournamentStartDateField;
    public javax.swing.JLabel tournamentStartDateLabel;
    public javax.swing.JLabel tournamentStatusLabel;
    public javax.swing.JLabel tournamentTeamsLabel;
    public javax.swing.JButton viewClassesButton;
    public javax.swing.JButton viewCoachButton;
    public javax.swing.JPanel viewListsRegister;
    public javax.swing.JButton viewStudentsButton1;
    public javax.swing.JButton viewTeamsButton;
    public javax.swing.JButton viewTeamsButton2;
    // End of variables declaration//GEN-END:variables

}
