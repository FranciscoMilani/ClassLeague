package br.ucs.classleague.infrastructure.presentation.views;

import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Francisco
 */
public class TournamentGUI extends javax.swing.JFrame {

    /**
     * Creates new form TournamentGUI
     */
    public TournamentGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tournamentTabbedPane = new JTabbedPane();
        tournamentMainPanel = new JPanel();
        tournamentInfoPanel = new JPanel();
        infoTitleLabel = new JLabel();
        sportTypeLabel = new JLabel();
        tournamentPhaseLabel = new JLabel();
        tournamentEndDateLabel = new JLabel();
        tournamentStartDateLabel = new JLabel();
        infoIcon = new JLabel();
        tournamentPhaseSportInfoData = new JLabel();
        tournamentPhaseInfoData = new JLabel();
        tournamentStartDateInfoData = new JLabel();
        tournamentEndInfoData = new JLabel();
        tournamentMatchPanel = new JPanel();
        tournamentNextMatchesTable = new JLabel();
        tournamentMatchesTableScrollPane = new JScrollPane();
        tournamentMatchesTable = new JTable();
        tournamentSidePanel = new JPanel();
        viewTeamsButton = new JButton();
        startNewMatchButton = new JButton();
        matchMainPanel = new JPanel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(null);
        setPreferredSize(new Dimension(1024, 768));
        setSize(new Dimension(1024, 768));
        getContentPane().setLayout(new BoxLayout(getContentPane(), BoxLayout.LINE_AXIS));

        tournamentMainPanel.setPreferredSize(new Dimension(1024, 768));

        tournamentInfoPanel.setBackground(Color.darkGray);
        tournamentInfoPanel.setPreferredSize(new Dimension(693, 212));

        infoTitleLabel.setFont(new Font("Segoe UI Semibold", 0, 24)); // NOI18N
        infoTitleLabel.setText("Informações");

        sportTypeLabel.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        sportTypeLabel.setIcon(new ImageIcon(getClass().getResource("/icons/info-24.png"))); // NOI18N
        sportTypeLabel.setText("Tipo do esporte:");

        tournamentPhaseLabel.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        tournamentPhaseLabel.setIcon(new ImageIcon(getClass().getResource("/icons/info-24.png"))); // NOI18N
        tournamentPhaseLabel.setText("Fase da competição:");

        tournamentEndDateLabel.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        tournamentEndDateLabel.setIcon(new ImageIcon(getClass().getResource("/icons/info-24.png"))); // NOI18N
        tournamentEndDateLabel.setText("Data de fim: ");

        tournamentStartDateLabel.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        tournamentStartDateLabel.setIcon(new ImageIcon(getClass().getResource("/icons/info-24.png"))); // NOI18N
        tournamentStartDateLabel.setText("Data de início: ");

        infoIcon.setHorizontalAlignment(SwingConstants.CENTER);
        infoIcon.setIcon(new ImageIcon(getClass().getResource("/icons/info-24.png"))); // NOI18N

        tournamentPhaseSportInfoData.setText("jLabel8");

        tournamentPhaseInfoData.setText("jLabel8");

        tournamentStartDateInfoData.setText("jLabel8");

        tournamentEndInfoData.setText("jLabel8");

        GroupLayout tournamentInfoPanelLayout = new GroupLayout(tournamentInfoPanel);
        tournamentInfoPanel.setLayout(tournamentInfoPanelLayout);
        tournamentInfoPanelLayout.setHorizontalGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                        .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(tournamentPhaseLabel, GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(sportTypeLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(tournamentPhaseInfoData, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                            .addComponent(tournamentPhaseSportInfoData, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                                .addComponent(tournamentEndDateLabel, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tournamentEndInfoData, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))
                            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                                .addComponent(tournamentStartDateLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tournamentStartDateInfoData, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                        .addComponent(infoTitleLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(infoIcon)
                        .addGap(31, 31, 31))))
        );

        tournamentInfoPanelLayout.linkSize(SwingConstants.HORIZONTAL, new Component[] {tournamentEndDateLabel, tournamentStartDateLabel});

        tournamentInfoPanelLayout.setVerticalGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tournamentInfoPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(infoIcon, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoTitleLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sportTypeLabel)
                    .addComponent(tournamentStartDateLabel)
                    .addComponent(tournamentPhaseSportInfoData, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentStartDateInfoData, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(tournamentInfoPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(tournamentPhaseLabel)
                    .addComponent(tournamentEndDateLabel)
                    .addComponent(tournamentPhaseInfoData, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentEndInfoData, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tournamentMatchPanel.setBackground(Color.darkGray);
        tournamentMatchPanel.setPreferredSize(new Dimension(693, 417));

        tournamentNextMatchesTable.setFont(new Font("Segoe UI Semibold", 0, 24)); // NOI18N
        tournamentNextMatchesTable.setText("Próximas partidas");

        tournamentMatchesTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tournamentMatchesTableScrollPane.setViewportView(tournamentMatchesTable);

        GroupLayout tournamentMatchPanelLayout = new GroupLayout(tournamentMatchPanel);
        tournamentMatchPanel.setLayout(tournamentMatchPanelLayout);
        tournamentMatchPanelLayout.setHorizontalGroup(tournamentMatchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMatchPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentMatchPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(tournamentNextMatchesTable, GroupLayout.PREFERRED_SIZE, 651, GroupLayout.PREFERRED_SIZE)
                    .addComponent(tournamentMatchesTableScrollPane, GroupLayout.PREFERRED_SIZE, 651, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        tournamentMatchPanelLayout.setVerticalGroup(tournamentMatchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMatchPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(tournamentNextMatchesTable)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tournamentMatchesTableScrollPane, GroupLayout.PREFERRED_SIZE, 320, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        tournamentSidePanel.setBackground(Color.darkGray);

        viewTeamsButton.setText("Visualizar Times");

        startNewMatchButton.setText("<html><body style='text-align: center'>Iniciar <br> nova partida <br></body></html>");
        startNewMatchButton.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        startNewMatchButton.setHorizontalTextPosition(SwingConstants.CENTER);
        startNewMatchButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                startNewMatchButtonActionPerformed(evt);
            }
        });

        GroupLayout tournamentSidePanelLayout = new GroupLayout(tournamentSidePanel);
        tournamentSidePanel.setLayout(tournamentSidePanelLayout);
        tournamentSidePanelLayout.setHorizontalGroup(tournamentSidePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, tournamentSidePanelLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(tournamentSidePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(startNewMatchButton, GroupLayout.PREFERRED_SIZE, 124, GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewTeamsButton, GroupLayout.PREFERRED_SIZE, 124, GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        tournamentSidePanelLayout.setVerticalGroup(tournamentSidePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, tournamentSidePanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(startNewMatchButton, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewTeamsButton, GroupLayout.PREFERRED_SIZE, 245, GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        GroupLayout tournamentMainPanelLayout = new GroupLayout(tournamentMainPanel);
        tournamentMainPanel.setLayout(tournamentMainPanelLayout);
        tournamentMainPanelLayout.setHorizontalGroup(tournamentMainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentMainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(tournamentMatchPanel, GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                    .addComponent(tournamentInfoPanel, GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(tournamentSidePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tournamentMainPanelLayout.setVerticalGroup(tournamentMainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tournamentMainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(tournamentSidePanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tournamentMainPanelLayout.createSequentialGroup()
                        .addComponent(tournamentInfoPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(tournamentMatchPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tournamentTabbedPane.addTab("Torneio", tournamentMainPanel);

        GroupLayout matchMainPanelLayout = new GroupLayout(matchMainPanel);
        matchMainPanel.setLayout(matchMainPanelLayout);
        matchMainPanelLayout.setHorizontalGroup(matchMainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 1008, Short.MAX_VALUE)
        );
        matchMainPanelLayout.setVerticalGroup(matchMainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 725, Short.MAX_VALUE)
        );

        tournamentTabbedPane.addTab("Partida", matchMainPanel);

        getContentPane().add(tournamentTabbedPane);

        setSize(new Dimension(1024, 768));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void startNewMatchButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_startNewMatchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startNewMatchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TournamentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TournamentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TournamentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TournamentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TournamentGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel infoIcon;
    private JLabel infoTitleLabel;
    private JPanel matchMainPanel;
    private JLabel sportTypeLabel;
    private JButton startNewMatchButton;
    private JLabel tournamentEndDateLabel;
    private JLabel tournamentEndInfoData;
    private JPanel tournamentInfoPanel;
    private JPanel tournamentMainPanel;
    private JPanel tournamentMatchPanel;
    private JTable tournamentMatchesTable;
    private JScrollPane tournamentMatchesTableScrollPane;
    private JLabel tournamentNextMatchesTable;
    private JLabel tournamentPhaseInfoData;
    private JLabel tournamentPhaseLabel;
    private JLabel tournamentPhaseSportInfoData;
    private JPanel tournamentSidePanel;
    private JLabel tournamentStartDateInfoData;
    private JLabel tournamentStartDateLabel;
    private JTabbedPane tournamentTabbedPane;
    private JButton viewTeamsButton;
    // End of variables declaration//GEN-END:variables
}
